<Unit> -> <Decl>

<Decl> -> enum <EnumDecl> | struct <TypeDecl> | var <VarDecl> | const <ConstDecl> | func <FuncDecl>

<EnumDecl> -> name { <EnumItems> }
<EnumItems> -> <EnumItem> | <EnumItem> , <EnumItems>
<EnumItem> -> name | name = <Expr>

<TypeDecl> -> name { <TypeFields> }
<TypeFields> -> <NameList> : <Type> ; | <NameList> : <Type> ; <TypeFields>

<VarDecl> -> name = <Expr> | name : <Type> = <Expr> ; | name : <Type> ;

<ConstDecl> -> name = <Expr> ;

<FuncDecl> -> name ( <FuncParamList> ) { <StatementBlock> } | name ( <FuncParamList> ) : <Type> { <StatementBlock> }
<FuncParamList> -> <FuncParam> | <FuncParam> , <FuncParamList>
<FuncParam> -> name : <Type>

<StatementBlock> -> <Statement> | <Statement> <StatementBlock> | e
 
<Statement> -> return <Expr> ; |
	     | break ;
	     | continue ;
	     | { <StatementBlock> }
	     | if ( <Expr> ) <StatementBlock> | if ( <Expr> ) <StatementBlock> else <StatementBlock> | if ( <Expr> ) <StatementBlock> else if <StatementBlock>
	     | while ( <Expr> ) <StatementBlock>
	     | do <StatementBlock> while ( <Expr> )
	     | for ( <StatementList> ; <Expr ; <StatementList> ) <StatementBlock>
	     | switch ( <Expr> ) <SwitchBlock>
	     | <Expr> //to do


<SwitchBlock> -> { <SwitchCase> } | { <SwitchCase> <SwitchBlock> }
<SwitchCase> ->  case <Expr> : <Statement> | default : <Statement>
 
